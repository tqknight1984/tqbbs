<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:tx="http://www.springframework.org/schema/tx" 
	xmlns:context="http://www.springframework.org/schema/context" 
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:p="http://www.springframework.org/schema/p" 
	xmlns:c="http://www.springframework.org/schema/c"	
	xmlns:cache="http://www.springframework.org/schema/cache"
	xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation=" 
          http://www.springframework.org/schema/beans 
          http://www.springframework.org/schema/beans/spring-beans-3.2.xsd 
          http://www.springframework.org/schema/tx 
          http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
          http://www.springframework.org/schema/context 
          http://www.springframework.org/schema/context/spring-context-3.2.xsd 
          http://www.springframework.org/schema/mvc 
          http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd
          http://www.springframework.org/schema/util  http://www.springframework.org/schema/util/spring-util-3.2.xsd
          http://www.springframework.org/schema/cache  http://www.springframework.org/schema/cache/spring-cache-3.2.xsd">
    <bean id="sysConfig" class="org.springframework.beans.factory.config.PropertiesFactoryBean">
		<property name="ignoreResourceNotFound" value="true" />
		<property name="locations">
			<list>
				<value>classpath:myconfig.properties</value>
			</list>
		</property>
	</bean>
     <!-- 用于数据源的参数引用 -->
	<bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="ignoreResourceNotFound" value="true" />
		<property name="locations">
			<list>
				<value>classpath:db.properties</value>
				<value>file:///data/app/config/springmvc/db.properties</value>
			</list>
		</property>
	</bean>    
    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close">
		<property name="driverClass" value="${driverClass}" />
		<property name="jdbcUrl" value="${jdbcUrl}" />
		<property name="user" value="${user}" />
		<property name="password" value="${password}" />
		<property name="maxPoolSize" value="${c3p0.max_size}" />
		<property name="minPoolSize" value="${c3p0.min_size}" />
		<property name="initialPoolSize" value="${c3p0.initial_size}" />
		<property name="maxIdleTime" value="${c3p0.timeout}" />
		<property name="maxStatements" value="${c3p0.max_statements}" />
		<property name="checkoutTimeout" value="${c3p0.checkoutTimeout}" />
		<property name="acquireIncrement" value="${c3p0.acquire_increment}" />
		<property name="acquireRetryAttempts" value="${c3p0.acquireRetryAttempts}" />
		<property name="acquireRetryDelay" value="${c3p0.acquireRetryDelay}" />
		<property name="idleConnectionTestPeriod" value="${c3p0.idle_test_period}" />
	</bean>      
    <!-- 由Spring来管理事务 -->
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>
	<!-- 使用annotation注解方式配置事务 -->
	<tx:annotation-driven transaction-manager="transactionManager" /> 
	<!--1:配置一个JdbcTemplate实例，用于数据库的操作-->  
    <bean id="jdbc" class="org.springframework.jdbc.core.JdbcTemplate">   
         <property name ="dataSource" ref="dataSource"/>   
    </bean>
    <bean id="queryRunner" class="org.apache.commons.dbutils.QueryRunner">
   		<constructor-arg ref="dataSource"/>
   	</bean>
	<!-- Spring 自动扫描包 -->
	<context:component-scan base-package="com.poly.service" />
	<context:component-scan base-package="com.poly.dao" /> 
	<!-- 要调用的工作类 -->
        <bean id="quartzJob" class="com.poly.schedule.ScheduleTask"></bean>
        <!-- 定义调用对象和调用对象的方法 -->
        <bean id="jobtask" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
            <!-- 调用的类 -->
            <property name="targetObject">
                <ref bean="quartzJob"/>
            </property>
            <!-- 调用类中的方法 -->
            <property name="targetMethod">
                <value>carinfoTimeTask</value>
            </property>
        </bean>
        
        <!-- 定义触发时间-->
        <bean id="doTime" class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
            <property name="jobDetail">
                <ref bean="jobtask"/>
            </property>
       	
            <!-- cron表达式 -->
            <property name="cronExpression">
                <value>0 0/10 * * * ?</value>
            </property>
        </bean>
        
        
        <!-- 总管理类 如果将lazy-init='false'那么容器启动就会执行调度程序  -->
        <bean id="startQuertz" lazy-init="false" autowire="no" class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
            <property name="triggers">
                <list>
                    <ref bean="doTime"/>
                </list>
            </property>
        </bean>
        <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver" 
        			p:defaultEncoding="utf-8">
        	<!-- 设置上传文件的最大尺寸为10MB -->
		    <property name="maxUploadSize">
		        <value>10485760</value>
		    </property>
        </bean> 
</beans>